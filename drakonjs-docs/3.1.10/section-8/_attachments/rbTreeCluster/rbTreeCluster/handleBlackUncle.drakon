{
    "type": "drakon",
    "items": {
        "1": {
            "type": "end"
        },
        "2": {
            "type": "branch",
            "branchId": 0,
            "one": "69"
        },
        "69": {
            "type": "question",
            "one": "70",
            "two": "73",
            "flag1": 1,
            "content": "nodeImage === 'X:R,X->P; P:R,P<-G; G:B; U:B'"
        },
        "70": {
            "type": "action",
            "one": "89",
            "content": "newRootOfSubtree = rotateLeftRight(\n    tree,\n    G\n)"
        },
        "73": {
            "type": "question",
            "one": "74",
            "two": "77",
            "flag1": 1,
            "content": "nodeImage === 'X:R,X<-P; P:R,P->G; G:B; U:B'"
        },
        "74": {
            "type": "action",
            "one": "89",
            "content": "newRootOfSubtree = rotateRightLeft(\n    tree,\n    G\n)"
        },
        "77": {
            "type": "question",
            "one": "78",
            "two": "81",
            "flag1": 1,
            "content": "nodeImage === 'X:R,X<-P; P:R,P<-G; G:B; U:B'"
        },
        "78": {
            "type": "action",
            "one": "89",
            "content": "newRootOfSubtree = rotateRight(tree, G)"
        },
        "81": {
            "type": "question",
            "one": "82",
            "two": "85",
            "flag1": 1,
            "content": "nodeImage === 'X:R,X->P; P:R,P->G; G:B; U:B'"
        },
        "82": {
            "type": "action",
            "one": "89",
            "content": "newRootOfSubtree = rotateLeft(tree, G)"
        },
        "85": {
            "type": "question",
            "one": "86",
            "two": "89",
            "flag1": 1,
            "content": "console.error('handleBlackUncle')"
        },
        "86": {
            "type": "action",
            "one": "89",
            "content": "newRootOfSubtree = tree.root"
        },
        "87": {
            "type": "action",
            "one": "1",
            "content": "return {\n    next_x_node: newRootOfSubtree,\n    is_fix_complete: true\n}"
        },
        "88": {
            "type": "action",
            "one": "87",
            "content": "G.colour = true"
        },
        "89": {
            "type": "action",
            "one": "88",
            "content": "newRootOfSubtree.colour = false"
        }
    },
    "keywords": {
        "function": true,
        "machine": false,
        "async": false,
        "export": false,
        "algoprop": false,
        "lazy": false
    },
    "params": "tree,x, P, G, U, nodeImage"
}