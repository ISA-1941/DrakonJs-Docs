{
    "type": "drakon",
    "items": {
        "1": {
            "type": "end"
        },
        "2": {
            "type": "branch",
            "branchId": 0,
            "one": "4"
        },
        "4": {
            "type": "question",
            "one": "5",
            "two": "6",
            "flag1": 1,
            "content": "node === tree.nullNode"
        },
        "5": {
            "type": "action",
            "one": "6",
            "content": "return {\n    parent: parent,\n    direction: data < parent.data ? 'left':\n    'right'\n}"
        },
        "6": {
            "type": "question",
            "one": "7",
            "two": "8",
            "flag1": 1,
            "content": "data < node.data"
        },
        "7": {
            "type": "action",
            "one": "1",
            "content": "return findInsertionPoint(\n    tree,\n    node.left,\n    data,\n    node\n)"
        },
        "8": {
            "type": "question",
            "one": "9",
            "two": "10",
            "flag1": 1,
            "content": "data > node.data"
        },
        "9": {
            "type": "action",
            "one": "1",
            "content": "return findInsertionPoint(\n    tree,\n    node.right,\n    data,\n    node\n)"
        },
        "10": {
            "type": "action",
            "one": "1",
            "content": "return {\n    node: node,\n    duplicate: true\n}"
        }
    },
    "keywords": {
        "function": true,
        "machine": false,
        "async": false,
        "export": false,
        "algoprop": false,
        "lazy": false
    },
    "params": "tree, node, data, parent"
}