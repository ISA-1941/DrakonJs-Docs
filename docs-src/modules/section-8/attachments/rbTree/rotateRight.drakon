{
    "type": "drakon",
    "items": {
        "1": {
            "type": "end"
        },
        "2": {
            "type": "branch",
            "branchId": 1,
            "one": "15",
            "content": "Nodes rebuilding"
        },
        "3": {
            "type": "action",
            "one": "6",
            "content": "L = K.left\nt = L.right"
        },
        "4": {
            "type": "branch",
            "one": "14",
            "branchId": 3,
            "content": "Exit"
        },
        "5": {
            "type": "branch",
            "one": "9",
            "branchId": 2,
            "content": "Subtree root formation"
        },
        "6": {
            "type": "action",
            "one": "7",
            "content": "L.parent = K.parent\nL.right = K\nK.parent = L\nK.left = t"
        },
        "7": {
            "type": "question",
            "one": "8",
            "two": "5",
            "flag1": 1,
            "content": "t !== tree.nullNode"
        },
        "8": {
            "type": "action",
            "one": "5",
            "content": "t.parent = K"
        },
        "9": {
            "type": "question",
            "one": "10",
            "two": "11",
            "flag1": 1,
            "content": "K === tree.root"
        },
        "10": {
            "type": "action",
            "one": "4",
            "content": "tree.root = L"
        },
        "11": {
            "type": "question",
            "one": "12",
            "two": "13",
            "flag1": 1,
            "content": "L.parent.left === K"
        },
        "12": {
            "type": "action",
            "one": "4",
            "content": "L.parent.left = L"
        },
        "13": {
            "type": "action",
            "one": "4",
            "content": "L.parent.right = L"
        },
        "14": {
            "type": "action",
            "one": "1",
            "content": "return L"
        },
        "15": {
            "type": "action",
            "one": "3",
            "content": "console.log('rotateRight');"
        }
    },
    "keywords": {
        "function": true,
        "machine": false,
        "async": false,
        "export": false,
        "algoprop": false,
        "lazy": false
    },
    "params": "tree,K"
}