handleBlackUncleRotations (tree, x, P, G, U, nodeImage)
        |
        +-- switch (nodeImage) --+
        |                        |
        |      case 'P:r^P←Gl; U:b; X:r^X←Pr' (B1 L-R)
        |                        |
        |      +-- rotateLeft(tree, P)
        |      |
        |      +-- return { next_x_node: G.left, is_fix_complete: false }
        |      |
        |      case 'P:r^P←Gr; U:b; X:r^X←Pl' (B1 R-L)
        |                        |
        |      +-- rotateRight(tree, P)
        |      |
        |      +-- return { next_x_node: G.right, is_fix_complete: false }
        |      |
        |      case 'P:r^P←Gl; U:b; X:r^X←Pl' (B2 L-L)
        |                        |
        |      +-- P.colour = false
        |      |
        |      +-- G.colour = true
        |      |
        |      +-- const rotatedNode_LL = rotateRight(tree, G)
        |      |
        |      +-- if (G === tree.root) { tree.root = rotatedNode_LL }
        |      |
        |      +-- return { next_x_node: null, is_fix_complete: true }
        |      |
        |      case 'P:r^P←Gr; U:b; X:r^X←Pr' (B2 R-R)
        |                        |
        |      +-- P.colour = false
        |      |
        |      +-- G.colour = true
        |      |
        |      +-- const rotatedNode_RR = rotateLeft(tree, G)
        |      |
        |      +-- if (G === tree.root) { tree.root = rotatedNode_RR }
        |      |
        |      +-- return { next_x_node: null, is_fix_complete: true }
        |      |
        |      default:
        |                        |
        |      +-- console.error('handleBlackUncleRotations: Unknown nodeImage', nodeImage)
        |      |
        |      +-- return { next_x_node: null, is_fix_complete: true }
        |
        End